name: Weekly RetroArch PS3 Build

on:
  schedule:
    - cron: '0 3 * * 1'
  workflow_dispatch:

jobs:
  build-latest-retroarch:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout this repository
      uses: actions/checkout@v4

    - name: Set up QEMU for cross-architecture containers
      uses: docker/setup-qemu-action@v3

    - name: Fetch latest RetroArch release info
      id: retroarch_release
      run: |
        RELEASE_JSON=$(curl -s https://api.github.com/repos/libretro/RetroArch/releases/latest)
        TAG_NAME=$(echo "$RELEASE_JSON" | jq -r '.tag_name')
        echo "latest_tag=$TAG_NAME" >> $GITHUB_OUTPUT

    - name: Check last built tag
      id: check_built
      run: |
        LAST_BUILT_TAG=$(cat .last_built_tag 2>/dev/null || echo "none")
        echo "last_built_tag=$LAST_BUILT_TAG" >> $GITHUB_OUTPUT

    - name: Cache RetroArch source
      id: cache-source
      uses: actions/cache@v4
      with:
        path: retroarch-src
        key: retroarch-src-${{ steps.retroarch_release.outputs.latest_tag }}

    - name: Download RetroArch Source (if not cached)
      if: steps.cache-source.outputs.cache-hit != 'true'
      run: |
        rm -rf retroarch-src
        mkdir retroarch-src
        wget https://github.com/libretro/RetroArch/archive/${{ steps.retroarch_release.outputs.latest_tag }}.tar.gz -O retroarch.tar.gz
        tar -xzf retroarch.tar.gz -C retroarch-src --strip-components=1
        rm retroarch.tar.gz

    - name: Build custom Docker image with Cg Toolkit
      run: |
        docker build -t ps3dev-cg -f Dockerfile.ps3dev-cg .

    - name: Build with custom ps3dev-docker + Cg (QEMU)
      if: steps.check_built.outputs.last_built_tag != steps.retroarch_release.outputs.latest_tag
      run: |
        docker run --rm --platform linux/aarch64 \
          -v ${{ github.workspace }}/retroarch-src:/work \
          -w /work \
          ps3dev-cg bash -c "
            make -f Makefile.psl1ght -j$(nproc)
          "

    - name: Upload PS3 Build Artifact
      if: steps.check_built.outputs.last_built_tag != steps.retroarch_release.outputs.latest_tag
      uses: actions/upload-artifact@v4
      with:
        name: retroarch-ps3-${{ steps.retroarch_release.outputs.latest_tag }}
        path: |
          retroarch-src/retroarch_ps3.self
          retroarch-src/retroarch_*.pkg
          retroarch-src/retroarch_*.elf
        if-no-files-found: warn

    - name: Save built tag
      if: steps.check_built.outputs.last_built_tag != steps.retroarch_release.outputs.latest_tag
      run: |
        echo "${{ steps.retroarch_release.outputs.latest_tag }}" > .last_built_tag
        git config --global user.email "actions@github.com"
        git config --global user.name "GitHub Actions"
        git add .last_built_tag || true
        git commit -m "Update last built RetroArch tag" || true
        git push || true
